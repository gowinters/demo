name: "[Auto] CI Checks execution"
run-name: "Auto: CI checks for branch ${{ github.ref_name }} ⭐ triggered by ${{github.triggering_actor}}"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - release
      - develop

jobs:
# Commenting out style until TOM-641 is worked
#  style:
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    steps:
#    - uses: actions/checkout@v2
#    - uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 6.0.x
#    - name: Install dotnet format
#      run: dotnet tool install -g dotnet-format
#    - name: Create NuGet.config for restoring packages
#      run: echo "$NUGET_CONFIG" > NuGet.config
#      env:
#        NUGET_CONFIG: ${{secrets.NUGET_CONFIG}}
#    - name: Check style
#      run: dotnet format src/Vas.FeedNext.sln

  sonarcloud:
    if: github.event_name == 'pull_request'
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install Dotnet Coverage
        shell: powershell
        run: dotnet tool install -g dotnet-coverage
      - name: Add NuGet source
        run: 'dotnet nuget add source https://nuget.pkg.github.com/vas-dev/index.json -n github --username VAS --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text'
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"vas-dev_vas-api-feed-next" /o:"vas-dev" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build src/Vas.FeedNext.sln
          dotnet-coverage collect "dotnet test src/Vas.FeedNext.sln" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
